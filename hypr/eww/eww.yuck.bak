
; Top panel, with workspace, clock, an status.
(defwindow panel
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "32px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive "true"
  (panel))

(defwidget panel []
  (centerbox :class "panel"
             :orientation "h"
    ; Left: Launcher, Workspace/tasklist, Window Title
    (box :orientation "h"
         :halign "start"
         :spacing 4
         :space-evenly false
      (tangible-icon-button :icon icon-search
                            :tooltip "Menu"
                            :onclick "pkill -x rofi || rofi -show drun -theme ~/.config/hypr/rofi-themes/launcher.rasi &")
      (workspaces)
      (apptitle))
    ; Center: Time
    (clock)
    ; Right: Status
    (box :orientation "h"
         :halign "end"
         :spacing 4
         :space-evenly false
      (tangible-metric :icon icon-cpu
                       :tooltip "CPU"
                       :value "${round(EWW_CPU['avg'], 0)}% | ${EWW_TEMPS['CPU']}°C")
      (tangible-metric :icon icon-memory
                       :tooltip "Memory"
                       :value "${round(EWW_RAM['used_mem']/1048576, 1)}G")
      (tangible-metric :icon icon-disk
                       :tooltip "${round(EWW_DISK['/']['free']/1073741824, 0)}G free out of ${round(EWW_DISK['/']['total']/1073741824, 0)}G"
                       :value "${round(EWW_DISK['/']['used']/1073741824, 0)}G")
      (tangible-metric :icon {(vol-info['port'] == 'analog-output-headphones') 
                               ? icon-headphone
                               : vol-info['mute'] ? icon-speaker-mute : icon-speaker}
                       :tooltip "Volume"
                       :value "${vol-info['volume']}%")
      (tangible-metric :icon icon-sun
                       :tooltip "Brightness"
                       :value "${bri-info}%")
      (tangible-metric :icon {icon-battery
                              [(EWW_BATTERY['BAT0']['status'] == 'Charging') ? 'charging' : 'normal']
                              [round(EWW_BATTERY['BAT0']['capacity']/25, 0)]}
                       :tooltip "${EWW_BATTERY['BAT0']['status']}: ${EWW_BATTERY['BAT0']['capacity']}%"
                       :value "${EWW_BATTERY['BAT0']['capacity']}%")
      (tangible-metric2 :icon1 icon-up
                        :icon2 icon-down
                        :tooltip "Network"
                        :value "${round(EWW_NET['wlp5s0']['NET_UP']/1048576, 1)}M/s | ${round(EWW_NET['wlp5s0']['NET_DOWN']/1048576, 1)}M/s")
      (tangible-icon-button :icon icon-close
                            :tooltip "Close"
                            :disable {wm-info['activeWindow'] == ''}
                            :onclick "sleep 0.1 && hyprctl dispatch killactive 0")
      (tangible-icon-button :icon icon-more
                            :tooltip "More"
                            :onclick "pkill -10 waybar || waybar -c ~/.config/hypr/waybar/config.jsonc -s ~/.config/hypr/waybar/style.css &!")
    )))

; Workspace
(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :halign "start"
       :space-evenly false
       :spacing 0
    ; (for ws in '[1,2,3,4,5,6,7,8,9]'
    ;   (ws-button :class {wm-info['eDP-1'][ws - 1]} :id ws :icon 'term'))))
    (ws-button :class {wm-info['eDP-1'][0]} :id 1 :icon icon-term)
    (ws-button :class {wm-info['eDP-1'][1]} :id 2 :icon icon-term)
    (ws-button :class {wm-info['eDP-1'][2]} :id 3 :icon icon-web)
    (ws-button :class {wm-info['eDP-1'][3]} :id 4 :icon icon-web)
    (ws-button :class {wm-info['eDP-1'][4]} :id 5 :icon icon-folder)
    (ws-button :class {wm-info['eDP-1'][5]} :id 6 :icon icon-media)
    (ws-button :class {wm-info['eDP-1'][6]} :id 7 :icon icon-design)
    (ws-button :class {wm-info['eDP-1'][7]} :id 8 :icon icon-game)
    (ws-button :class {wm-info['eDP-1'][8]} :id 9 :icon icon-virt)))

; Workspace Button
(defwidget ws-button [class id icon]
  (button :class class 
          ; :onclick "~/.config/scripts/workspace ${id}"
          :onclick "hyprctl dispatch workspace ${id}"
    (centerbox :orientation "v"
      (box :class "ws-ribbon"
           :height 4)
      (box :class "ws-main" 
        ; (image :path "icons/${icon}.png"
        ;        :image-width 12
        ;        :image-height 12))
        (tangible-icon :icon icon))
      (box :height 4)
    )))

; Apptitle
(defwidget apptitle []
  (box :class "apptitle"
    {wm-info['activeWindow']}))

; Clock
(defwidget clock []
  (button :class "clock"
    (box :orientation "h"
         :spacing 4
         :space-evenly false
      ; (circular-progress :value 10
      ;                    :start-at 75
      ;                    :thickness 6)
      datetime)))

(defwidget tangible-button [?onclick ?tooltip ?disable]
  (button :class "tangible-button ${disable == true ? 'disabled' : ''}"
          :onclick onclick
          :tooltip tooltip
    (children)))

(defwidget tangible-icon-button [?onclick icon ?tooltip ?disable]
  (tangible-button :disable disable
                   :onclick onclick
                   :tooltip tooltip
    (tangible-icon :icon icon)))

(defwidget tangible-metric [icon value ?tooltip]
  (button :class "metric"
          :tooltip tooltip
    (box :spacing 4
         :space-evenly false
      (tangible-icon :icon icon)
      value)))

(defwidget tangible-metric2 [icon1 icon2 value ?tooltip]
  (button :class "metric"
          :tooltip tooltip
    (box :spacing 4
         :space-evenly false
      (tangible-icon :icon icon1)
      value
      (tangible-icon :icon icon2))))

(defwidget tangible-icon [icon]
  (label :class "tangible-icon"
         :valign "center"
         :text icon))

; (defwidget metric [icon value tooltip]
;   (button :class "metric"
;           :tooltip tooltip
;     (box :spacing 6
;          :space-evenly false
;       (image :path "icons/${icon}.png"
;              :image-height 12)
;       value)))


(defpoll datetime :interval "2s" "date '+%d %b %y | %H:%M'")
(deflisten wm-info "./run-single.sh hyprland-workspaces.py")
(deflisten vol-info "./run-single.sh listen-audio.py")
(deflisten bri-info "./run-single.sh listen-brightness.py")

; icons 
(defvar icon-more "Å")
(defvar icon-cpu "Á")
(defvar icon-memory "À")
(defvar icon-disk "Â")
(defvar icon-speaker "È")
(defvar icon-speaker-mute "É")
(defvar icon-headphone "Ê")
(defvar icon-battery '{"normal": ["Ù","Ú","Û","Ü","Ý"], "charging": ["Þ","ß","à","á","â"]}')
(defvar icon-power "Ã")
(defvar icon-close "Ä")

(defvar icon-term "æ")
(defvar icon-web "ç")
(defvar icon-folder "è")
(defvar icon-media "é")
(defvar icon-design "ê")
(defvar icon-game "ë")
(defvar icon-virt "ì")
(defvar icon-sun "Ë")
(defvar icon-up "ã")
(defvar icon-down "ä")
(defvar icon-search "Æ")

